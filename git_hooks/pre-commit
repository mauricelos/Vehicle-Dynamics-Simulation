#!/bin/bash

unameOut="$(uname -s)"
case "${unameOut}" in
    Linux*)     machine=Linux;;
    Darwin*)    machine=Mac;;
    CYGWIN*)    machine=Cygwin;;
    MINGW*)     machine=MinGw;;
    *)          machine="UNKNOWN:${unameOut}"
esac

unstaged_changes=$(git diff --name-only)

if [[ $machine == "MinGw" || $machine == "Cygwin" ]]; then
    echo "Run Buildifier"
    bazel build //:buildifier 2>/dev/null && .vscode/windows_scripts/run_buildifier.sh
    echo "Run clang format"
    find ./include/* ./src/* ./test/* -regex '.*\.\(cpp\|h\)' -exec clang-format -style=file -i {} \; 2>/dev/null
    echo "Run tests"
    test_output=$(bazel test :all --experimental_enable_runfiles 2>/dev/null | tee /dev/tty)
fi

if [[ $machine == "Linux" ]]; then
    echo "Run Buildifier"
    bazel run //:buildifier 2>/dev/null
    echo "Run clang format"
    find ./include/* ./src/* ./test/* -regex '.*\.\(cpp\|h\)' -exec clang-format -style=file -i {} \; 2>/dev/null
    echo "Run tests"
    test_output=$(bazel test :all 2>/dev/null | tee /dev/tty)
fi

if [[ $machine == "Mac" ]]; then
    echo "Run Buildifier"
    bazel run //:buildifier 2>/dev/null
    echo "Run clang format"
    find ./include/* ./src/* ./test/* -type f -print | egrep -i '\.h$|\.cpp$' | xargs clang-format -i -style=file 2>/dev/null
    echo "Run tests"
    test_output=$(bazel test :all 2>/dev/null | tee /dev/tty)
fi

if [[ *$machine* == *"UNKNOWN"* ]]; then
    echo $'\n'"`tput setaf 1`Unsupported machine!`tput setaf 1`"$'\n'
    exit 1
fi

if [[ $test_output == *"FAILED"* ]]; then
    echo $'\n'"`tput setaf 1`Test failed, abort commit!`tput setaf 1`"$'\n'
    exit 1
fi

if [[ $unstaged_changes !=  $(git diff --name-only) ]]; then
    echo $'\n'"`tput setaf 1`Files changed due to formatting, please add formatted files and rerun commit!`tput sgr0`"$'\n'
    exit 1
fi

echo $'\n'"`tput setaf 2`All checks passed, continue with commit!`tput sgr0`"$'\n'

exit 0
