name: CI/CD Vehicle Dynamics Release

on:
  push:
    tags:
      - '[0-9]+.*'

  workflow_dispatch:

jobs:
  create_release:
    name: Create release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v1
      - name: Get tag
        id: vars
        run: echo ::set-output name=tag::${GITHUB_REF#refs/*/}
      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.vars.outputs.tag }}
          release_name: Vehicle Dynamics Simulation ${{ steps.vars.outputs.tag }}
          draft: false
          prerelease: false

  release_assets:
    name: Release assets
    needs: create_release
    runs-on: ${{ matrix.config.os }}
    strategy:
      matrix:
        config:
          - os: ubuntu-latest
            deployment_script: ./.vscode/linux_scripts/deploy_executable.sh
            os_name: linux
          - os: macos-latest
            deployment_script: ./.vscode/darwin_scripts/deploy_executable.sh
            os_name: darwin
          - os: windows-latest
            deployment_script: .\.vscode\windows_scripts\deploy_executable.bat
            os_name: windows
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
      - name: Checkout submodules
        run: git submodule update --init --recursive
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'
      - name: Use bazel
        run: ./bazelisk/bazelisk.py --version
      - name: Build binary ubuntu only
        run: ./bazelisk/bazelisk.py build :vehicle_dynamics_simulation --action_env CC=/usr/bin/gcc-8
        if: matrix.config.os == 'ubuntu-latest'
      - name: Build binary
        run: ./bazelisk/bazelisk.py build :vehicle_dynamics_simulation
        if: matrix.config.os != 'ubuntu-latest'
      - name: Deploy binaries
        run: ${{ matrix.config.deployment_script }}
      - name: Upload release assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_name: vehicle_dynamics_simulation_${{ matrix.config.os_name }}
          asset_path: ./deployment/vehicle_dynamics_simulation_${{ matrix.config.os_name }}.zip
          asset_content_type: application/zip
